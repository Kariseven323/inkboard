name: Flutter CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      COVERAGE_THRESHOLD: "90.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Generate code (injectable)
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Analyze
        run: flutter analyze

      - name: Run tests with coverage
        run: flutter test --coverage

      - name: Check coverage threshold
        env:
          THRESHOLD: ${{ env.COVERAGE_THRESHOLD }}
        run: |
          python3 - << 'PY'
          import sys
          total_lines = 0
          hit_lines = 0
          threshold = float('${THRESHOLD}')
          try:
            with open('coverage/lcov.info', 'r', encoding='utf-8') as f:
              for line in f:
                if line.startswith('LF:'):
                  total_lines += int(line.strip().split(':')[1])
                elif line.startswith('LH:'):
                  hit_lines += int(line.strip().split(':')[1])
          except FileNotFoundError:
            print('coverage/lcov.info not found. Failing.')
            sys.exit(1)
          if total_lines == 0:
            print('No lines found in coverage; failing.')
            sys.exit(1)
          coverage = (hit_lines / total_lines) * 100.0
          print(f'Coverage: {coverage:.2f}% (threshold {threshold:.2f}%)')
          if coverage + 1e-9 < threshold:
            print('Coverage below threshold. Failing.')
            sys.exit(1)
          PY

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: coverage/lcov.info

      # 注意：integration_test 通常需要设备/模拟器，默认不在CI执行
      # 可在后续加入 matrix + emulator 配置再启用。
